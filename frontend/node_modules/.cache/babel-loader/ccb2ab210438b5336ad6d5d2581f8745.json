{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer, productDeleteReducer, productReviewCreateReducer, productsTopRatedReducer } from \"./redux/reducers/productReducers\";\nimport { cartReducers } from \"./redux/reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userLoggedInReducer, userUpdateProfileReducer, usersListReducer, userDeleteReducer, userDetailsReducer, userUpdateReducer } from \"./redux/reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyOrderReducer, orderListOrderReducer, orderDeliverReducer } from \"./redux/reducers/orderReducers\";\nconst rootReducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productsTopRated: productsTopRatedReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userLoggedIn: userLoggedInReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  usersList: usersListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyOrderReducer,\n  orderListOrder: orderListOrderReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst cartItemsFtomStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFtomStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(rootReducers, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","productListReducer","productDetailsReducer","productCreateReducer","productUpdateReducer","productDeleteReducer","productReviewCreateReducer","productsTopRatedReducer","cartReducers","userLoginReducer","userRegisterReducer","userLoggedInReducer","userUpdateProfileReducer","usersListReducer","userDeleteReducer","userDetailsReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyOrderReducer","orderListOrderReducer","orderDeliverReducer","rootReducers","productList","productDetails","productCreate","productUpdate","productDelete","productReviewCreate","productsTopRated","cart","userLogin","userRegister","userLoggedIn","userDetails","userUpdateProfile","usersList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderListOrder","orderDeliver","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","cartItemsFtomStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,EAOEC,uBAPF,QAQO,kCARP;AASA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,wBAJF,EAKEC,gBALF,EAMEC,iBANF,EAOEC,kBAPF,EAQEC,iBARF,QASO,+BATP;AAUA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,uBAJF,EAKEC,qBALF,EAMEC,mBANF,QAOO,gCAPP;AASA,MAAMC,YAAY,GAAGxB,eAAe,CAAC;AACnCyB,EAAAA,WAAW,EAAEvB,kBADsB;AAEnCwB,EAAAA,cAAc,EAAEvB,qBAFmB;AAGnCwB,EAAAA,aAAa,EAAEvB,oBAHoB;AAInCwB,EAAAA,aAAa,EAAEvB,oBAJoB;AAKnCwB,EAAAA,aAAa,EAAEvB,oBALoB;AAMnCwB,EAAAA,mBAAmB,EAAEvB,0BANc;AAOnCwB,EAAAA,gBAAgB,EAAEvB,uBAPiB;AAQnCwB,EAAAA,IAAI,EAAEvB,YAR6B;AASnCwB,EAAAA,SAAS,EAAEvB,gBATwB;AAUnCwB,EAAAA,YAAY,EAAEvB,mBAVqB;AAWnCwB,EAAAA,YAAY,EAAEvB,mBAXqB;AAYnCwB,EAAAA,WAAW,EAAEpB,kBAZsB;AAanCqB,EAAAA,iBAAiB,EAAExB,wBAbgB;AAcnCyB,EAAAA,SAAS,EAAExB,gBAdwB;AAenCyB,EAAAA,UAAU,EAAExB,iBAfuB;AAgBnCyB,EAAAA,UAAU,EAAEvB,iBAhBuB;AAiBnCwB,EAAAA,WAAW,EAAEvB,kBAjBsB;AAkBnCwB,EAAAA,YAAY,EAAEvB,mBAlBqB;AAmBnCwB,EAAAA,QAAQ,EAAEvB,eAnByB;AAoBnCwB,EAAAA,WAAW,EAAEvB,uBApBsB;AAqBnCwB,EAAAA,cAAc,EAAEvB,qBArBmB;AAsBnCwB,EAAAA,YAAY,EAAEvB;AAtBqB,CAAD,CAApC;AAyBA,MAAMwB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CnD,OAAvE;AAEA,MAAMoD,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBzB,EAAAA,IAAI,EAAE;AACJ0B,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBvB,EAAAA,SAAS,EAAE;AAAE2B,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,KAAK,GAAGhE,WAAW,CACvB2B,YADuB,EAEvBiC,YAFuB,EAGvBV,eAAe,CAAChD,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAe4D,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productDeleteReducer,\n  productReviewCreateReducer,\n  productsTopRatedReducer,\n} from \"./redux/reducers/productReducers\";\nimport { cartReducers } from \"./redux/reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userLoggedInReducer,\n  userUpdateProfileReducer,\n  usersListReducer,\n  userDeleteReducer,\n  userDetailsReducer,\n  userUpdateReducer,\n} from \"./redux/reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyOrderReducer,\n  orderListOrderReducer,\n  orderDeliverReducer,\n} from \"./redux/reducers/orderReducers\";\n\nconst rootReducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productsTopRated: productsTopRatedReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userLoggedIn: userLoggedInReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  usersList: usersListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyOrderReducer,\n  orderListOrder: orderListOrderReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst cartItemsFtomStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : [];\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFtomStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst store = createStore(\n  rootReducers,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}