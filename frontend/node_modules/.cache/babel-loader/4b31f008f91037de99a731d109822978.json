{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/online-store/frontend/src/screens/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../redux/actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserListScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const usersList = useSelector(state => state.usersList);\n  const {\n    users,\n    loading,\n    error\n  } = usersList;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch, successDelete]);\n\n  const deleteUserHandler = id => {\n    if (window.confirm(\"Are you sure ?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          rounded: \"true\",\n          hover: true,\n          className: \"table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\",\n                  style: {\n                    color: \"green\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n                  className: \"ml-1\",\n                  to: `/admin/users/edit/${user._id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-sm\",\n                    variant: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-sm\",\n                  variant: \"danger\",\n                  onClick: () => deleteUserHandler(user._id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserListScreen, \"gjcxpxf9E0PBMfa8ekXP5vb4/Kc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Row","Col","Table","Button","LinkContainer","Loading","Message","listUsers","deleteUser","UserListScreen","dispatch","usersList","state","users","loading","error","userDelete","success","successDelete","deleteUserHandler","id","window","confirm","map","user","index","_id","name","email","isAdmin","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../redux/actions/userActions\";\n\nconst UserListScreen = () => {\n  const dispatch = useDispatch();\n\n  const usersList = useSelector((state) => state.usersList);\n  const { users, loading, error } = usersList;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch, successDelete]);\n\n  const deleteUserHandler = (id) => {\n    if (window.confirm(\"Are you sure ?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <h3>Users List</h3>\n          <Col>\n            <Table striped rounded=\"true\" hover className=\"table-sm\">\n              <thead>\n                <tr>\n                  <td>ID</td>\n                  <td>Name</td>\n                  <td>Email</td>\n                  <td>Admin</td>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((user, index) => (\n                  <tr key={index}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className=\"fas fa-check\"\n                          style={{ color: \"green\" }}\n                        ></i>\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer\n                        className=\"ml-1\"\n                        to={`/admin/users/edit/${user._id}`}\n                      >\n                        <Button className=\"btn btn-sm\" variant=\"primary\">\n                          <i className=\"fas fa-edit\"></i>\n                        </Button>\n                      </LinkContainer>\n                      <Button\n                        className=\"btn btn-sm\"\n                        variant=\"danger\"\n                        onClick={() => deleteUserHandler(user._id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n"]},"metadata":{},"sourceType":"module"}