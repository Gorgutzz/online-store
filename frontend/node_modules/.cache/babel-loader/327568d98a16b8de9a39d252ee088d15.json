{"ast":null,"code":"import * as actions from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const createOrder = dataOrder => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/orders\", dataOrder, config);\n    dispatch({\n      type: actions.ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_CREATE_FAILED,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: actions.ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_DETAILS_FAILED,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: actions.ORDER_PAY_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_PAY_FAILED,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n    dispatch({\n      type: actions.ORDER_DELIVER_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_DELIVER_FAILED,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: actions.ORDER_LIST_MY_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_LIST_MY_FAILED,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: actions.ORDER_LIST_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.ORDER_LIST_FAILED,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/redux/actions/orderActions.js"],"names":["actions","axios","logout","createOrder","dataOrder","dispatch","getState","type","ORDER_CREATE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","data","post","ORDER_CREATE_SUCCESS","payload","order","error","message","response","ORDER_CREATE_FAILED","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILED","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAILED","deliverOrder","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILED","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","orders","ORDER_LIST_MY_FAILED","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILED"],"mappings":"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","sourcesContent":["import * as actions from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\nexport const createOrder = (dataOrder) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/orders\", dataOrder, config);\n\n    dispatch({ type: actions.ORDER_CREATE_SUCCESS, payload: data.order });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_CREATE_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({ type: actions.ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DETAILS_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: actions.ORDER_PAY_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({ type: actions.ORDER_PAY_SUCCESS, payload: data.order });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"not authorized, no token\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: actions.ORDER_PAY_FAILED,\n        payload: message,\n      });\n    }\n  };\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_DELIVER_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n\n    dispatch({ type: actions.ORDER_DELIVER_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DELIVER_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_LIST_MY_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({ type: actions.ORDER_LIST_MY_SUCCESS, payload: data.orders });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_MY_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n    dispatch({ type: actions.ORDER_LIST_SUCCESS, payload: data.orders });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_FAILED,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}