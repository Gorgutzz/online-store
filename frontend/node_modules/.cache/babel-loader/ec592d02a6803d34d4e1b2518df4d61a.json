{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/online-store/frontend/src/screens/EditProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../redux/actions/productActions\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProductScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  let params = useParams();\n  const productID = params.id;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const {\n    product,\n    loading,\n    error\n  } = useSelector(state => state.productDetails);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = useSelector(state => state.productUpdate);\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/products\");\n    } else {\n      if (!product || product._id !== productID) {\n        dispatch(listProductDetails(productID));\n      } else {\n        setName(product.name);\n        setDescription(product.description);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setPrice(product.price);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n      }\n    }\n  }, [dispatch, product, productID, successUpdate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productID,\n      name,\n      description,\n      brand,\n      category,\n      price,\n      countInStock,\n      image\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error.message);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Brand\",\n          value: brand,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Category\",\n          value: category,\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"countInStock\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Count In Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Count In Stock\",\n          value: countInStock,\n          onChange: e => setCountInStock(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          label: \"Choose file\",\n          onChange: uploadFileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-3\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: loadingUpdate ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 30\n        }, this) : `Edit`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProductScreen, \"sVMDY226v1hzLsKYXPWPYD8U9+s=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector];\n});\n\n_c = EditProductScreen;\nexport default EditProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductScreen\");","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/screens/EditProductScreen.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useNavigate","useParams","Form","Button","Message","Loading","FormContainer","listProductDetails","updateProduct","axios","EditProductScreen","dispatch","navigate","params","productID","id","name","setName","description","setDescription","brand","setBrand","category","setCategory","price","setPrice","countInStock","setCountInStock","image","setImage","uploading","setUploading","product","loading","error","state","productDetails","loadingUpdate","success","successUpdate","errorUpdate","productUpdate","_id","handleSubmit","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","console","log","message","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SACEC,kBADF,EAEEC,aAFF,QAGO,iCAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAIa,QAAQ,GAAGZ,WAAW,EAA1B;AACA,MAAIa,MAAM,GAAGZ,SAAS,EAAtB;AACA,QAAMa,SAAS,GAAGD,MAAM,CAACE,EAAzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC8B,YAAD,EAAeC,eAAf,IAAkC/B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAEoC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BpC,WAAW,CAC5CqC,KAAD,IAAWA,KAAK,CAACC,cAD4B,CAA/C;AAIA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJC,IAAAA,OAAO,EAAEC,aAFL;AAGJL,IAAAA,KAAK,EAAEM;AAHH,MAIF1C,WAAW,CAAEqC,KAAD,IAAWA,KAAK,CAACM,aAAlB,CAJf;AAMA5C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0C,aAAJ,EAAmB;AACjB3B,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD,KAFD,MAEO;AACL,UAAI,CAACoB,OAAD,IAAYA,OAAO,CAACU,GAAR,KAAgB5B,SAAhC,EAA2C;AACzCH,QAAAA,QAAQ,CAACJ,kBAAkB,CAACO,SAAD,CAAnB,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,OAAO,CAACe,OAAO,CAAChB,IAAT,CAAP;AACAG,QAAAA,cAAc,CAACa,OAAO,CAACd,WAAT,CAAd;AACAG,QAAAA,QAAQ,CAACW,OAAO,CAACZ,KAAT,CAAR;AACAG,QAAAA,WAAW,CAACS,OAAO,CAACV,QAAT,CAAX;AACAG,QAAAA,QAAQ,CAACO,OAAO,CAACR,KAAT,CAAR;AACAG,QAAAA,eAAe,CAACK,OAAO,CAACN,YAAT,CAAf;AACAG,QAAAA,QAAQ,CAACG,OAAO,CAACJ,KAAT,CAAR;AACD;AACF;AACF,GAhBQ,EAgBN,CAACjB,QAAD,EAAWqB,OAAX,EAAoBlB,SAApB,EAA+ByB,aAA/B,CAhBM,CAAT;;AAkBA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAlC,IAAAA,QAAQ,CACNH,aAAa,CAAC;AACZkC,MAAAA,GAAG,EAAE5B,SADO;AAEZE,MAAAA,IAFY;AAGZE,MAAAA,WAHY;AAIZE,MAAAA,KAJY;AAKZE,MAAAA,QALY;AAMZE,MAAAA,KANY;AAOZE,MAAAA,YAPY;AAQZE,MAAAA;AARY,KAAD,CADP,CAAR;AAYD,GAdD;;AAgBA,QAAMkB,iBAAiB,GAAG,MAAOF,CAAP,IAAa;AACrC,UAAMG,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,IAAzB;AAEAhB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMsB,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAMA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM9C,KAAK,CAAC+C,IAAN,CAAW,aAAX,EAA0BN,QAA1B,EAAoCG,MAApC,CAAvB;AACAxB,MAAAA,QAAQ,CAAC0B,IAAD,CAAR;AACAxB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVD,CAUE,OAAOG,KAAP,EAAc;AACduB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAK,CAACyB,OAAlB;AACA5B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAvBD;;AAyBA,sBACE,QAAC,aAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGP,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES,YAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,MAAvC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,KAAK,EAAE3B,IAHT;AAIE,UAAA,QAAQ,EAAG4B,CAAD,IAAO3B,OAAO,CAAC2B,CAAC,CAACI,MAAF,CAASY,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAA8B,QAAA,SAAS,EAAC,MAAxC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,KAAK,EAAE1C,WAHT;AAIE,UAAA,QAAQ,EAAG0B,CAAD,IAAOzB,cAAc,CAACyB,CAAC,CAACI,MAAF,CAASY,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAA8B,QAAA,SAAS,EAAC,MAAxC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,KAAK,EAAExC,KAHT;AAIE,UAAA,QAAQ,EAAGwB,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACI,MAAF,CAASY,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA4BE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAiC,QAAA,SAAS,EAAC,MAA3C;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,KAAK,EAAEtC,QAHT;AAIE,UAAA,QAAQ,EAAGsB,CAAD,IAAOrB,WAAW,CAACqB,CAAC,CAACI,MAAF,CAASY,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eAqCE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAA8B,QAAA,SAAS,EAAC,MAAxC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,KAAK,EAAEpC,KAHT;AAIE,UAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACI,MAAF,CAASY,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF,eA8CE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAqC,QAAA,SAAS,EAAC,MAA/C;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,KAAK,EAAElC,YAHT;AAIE,UAAA,QAAQ,EAAGkB,CAAD,IAAOjB,eAAe,CAACiB,CAAC,CAACI,MAAF,CAASY,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eAuDE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAA8B,QAAA,SAAS,EAAC,MAAxC;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAC,aAFR;AAGE,UAAA,QAAQ,EAAEd;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAOGhB,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDF,eAgEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,OAAO,EAAC,SAA/C;AAAA,kBACGO,aAAa,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkB;AADlC;AAAA;AAAA;AAAA;AAAA,cAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD,CAnKD;;GAAM3B,iB;UACaX,W,EACFC,W,EACFC,S,EAWuBH,W,EAQhCA,W;;;KAtBAY,iB;AAqKN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport FormContainer from \"../components/FormContainer\";\nimport {\n  listProductDetails,\n  updateProduct,\n} from \"../redux/actions/productActions\";\nimport axios from \"axios\";\n\nconst EditProductScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  let params = useParams();\n  const productID = params.id;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const { product, loading, error } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = useSelector((state) => state.productUpdate);\n\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/products\");\n    } else {\n      if (!product || product._id !== productID) {\n        dispatch(listProductDetails(productID));\n      } else {\n        setName(product.name);\n        setDescription(product.description);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setPrice(product.price);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n      }\n    }\n  }, [dispatch, product, productID, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productID,\n        name,\n        description,\n        brand,\n        category,\n        price,\n        countInStock,\n        image,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error.message);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h2>Edit Product</h2>\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"name\" className=\"mt-3\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\" className=\"mt-3\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"brand\" className=\"mt-3\">\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Brand\"\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"category\" className=\"mt-3\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Category\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"price\" className=\"mt-3\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"countInStock\" className=\"mt-3\">\n            <Form.Label>Count In Stock</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Count In Stock\"\n              value={countInStock}\n              onChange={(e) => setCountInStock(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"image\" className=\"mt-3\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type=\"file\"\n              label=\"Choose file\"\n              onChange={uploadFileHandler}\n            ></Form.Control>\n            {uploading && <Loading />}\n          </Form.Group>\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n            {loadingUpdate ? <Loading /> : `Edit`}\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}