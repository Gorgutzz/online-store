{"ast":null,"code":"import * as actions from \"../constants/productConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const listProduct = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return async dispatch => {\n    try {\n      dispatch({\n        type: actions.PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n      dispatch({\n        type: actions.PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: actions.PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actions.PRODUCT_DETAILS_RESET\n    });\n    dispatch({\n      type: actions.PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: actions.PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: actions.PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createProduct = dataProduct => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products`, dataProduct, config);\n    dispatch({\n      type: actions.PRODUCT_CREATE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = dataProduct => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.put(`/api/products/${dataProduct._id}`, dataProduct, config);\n    dispatch({\n      type: actions.PRODUCT_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: actions.PRODUCT_UPDATE_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: actions.PRODUCT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actions.PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n    dispatch({\n      type: actions.PRODUCT_TOP_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: actions.PRODUCT_TOP_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/redux/actions/productActions.js"],"names":["actions","axios","logout","listProduct","keyword","pageNumber","dispatch","type","PRODUCT_LIST_REQUEST","data","get","PRODUCT_LIST_SUCCESS","payload","error","PRODUCT_LIST_FAIL","response","message","listProductDetails","id","PRODUCT_DETAILS_RESET","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","product","PRODUCT_DETAILS_FAIL","deleteProduct","getState","PRODUCT_DELETE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","delete","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","createProduct","dataProduct","PRODUCT_CREATE_REQUEST","post","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","updateProduct","PRODUCT_UPDATE_REQUEST","put","_id","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_RESET","PRODUCT_UPDATE_FAIL","listTopProducts","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","products","PRODUCT_TOP_FAIL"],"mappings":"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","sourcesContent":["import * as actions from \"../constants/productConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\nexport const listProduct =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: actions.PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      );\n\n      dispatch({ type: actions.PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: actions.PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: actions.PRODUCT_DETAILS_RESET });\n    dispatch({ type: actions.PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({ type: actions.PRODUCT_DETAILS_SUCCESS, payload: data.product });\n  } catch (error) {\n    dispatch({\n      type: actions.PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.PRODUCT_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({ type: actions.PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.PRODUCT_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createProduct = (dataProduct) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.PRODUCT_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.post(`/api/products`, dataProduct, config);\n\n    dispatch({ type: actions.PRODUCT_CREATE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.PRODUCT_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateProduct = (dataProduct) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.PRODUCT_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.put(`/api/products/${dataProduct._id}`, dataProduct, config);\n\n    dispatch({ type: actions.PRODUCT_UPDATE_SUCCESS });\n    dispatch({ type: actions.PRODUCT_UPDATE_RESET });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.PRODUCT_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: actions.PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({ type: actions.PRODUCT_TOP_SUCCESS, payload: data.products });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: actions.PRODUCT_TOP_FAIL,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}