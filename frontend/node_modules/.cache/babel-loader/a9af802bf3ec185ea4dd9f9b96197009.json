{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from \"../constants/userConstants.js\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: actions.USER_LOGIN_SUCCESS,\n      payload: data.user\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: actions.USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: actions.USER_REGISTER_SUCCESS,\n      payload: data.user\n    });\n    dispatch({\n      type: actions.USER_LOGIN_SUCCESS,\n      payload: data.user\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const userDetailsLoggedIn = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_LOGGED_IN_FAIL\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/users/profile\", config);\n    dispatch({\n      type: actions.USER_LOGGED_IN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LOGGED_IN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: actions.USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/profile\", user, config);\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_SUCCESS,\n      payload: data.user\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/users\", config);\n    dispatch({\n      type: actions.USER_LIST_SUCCESS,\n      payload: data.users\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: actions.USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = userData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${userData._id}`, userData, config);\n    dispatch({\n      type: actions.USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: actions.USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/redux/actions/userActions.js"],"names":["axios","actions","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","user","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOGOUT","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","userDetailsLoggedIn","getState","USER_LOGGED_IN_FAIL","userLogin","userInfo","Authorization","token","get","USER_LOGGED_IN_SUCCESS","getUserDetails","id","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateProfile","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","listUsers","USER_LIST_REQUEST","USER_LIST_SUCCESS","users","USER_LIST_FAIL","deleteUser","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_FAIL","updateUser","userData","_id","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actions from \"../constants/userConstants.js\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: actions.USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: actions.USER_LOGIN_SUCCESS, payload: data.user });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: actions.USER_LOGOUT });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: actions.USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register\",\n      {\n        name,\n        email,\n        password,\n      },\n      config\n    );\n\n    dispatch({ type: actions.USER_REGISTER_SUCCESS, payload: data.user });\n    dispatch({ type: actions.USER_LOGIN_SUCCESS, payload: data.user });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const userDetailsLoggedIn = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_LOGGED_IN_FAIL });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/users/profile\", config);\n\n    dispatch({ type: actions.USER_LOGGED_IN_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LOGGED_IN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({ type: actions.USER_DETAILS_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_UPDATE_PROFILE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\"/api/users/profile\", user, config);\n\n    dispatch({ type: actions.USER_UPDATE_PROFILE_SUCCESS, payload: data.user });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/users\", config);\n\n    dispatch({ type: actions.USER_LIST_SUCCESS, payload: data.users });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: actions.USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (userData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.USER_UPDATE_PROFILE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/${userData._id}`,\n      userData,\n      config\n    );\n\n    dispatch({ type: actions.USER_UPDATE_SUCCESS });\n    dispatch({ type: actions.USER_DETAILS_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({\n      type: actions.USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}