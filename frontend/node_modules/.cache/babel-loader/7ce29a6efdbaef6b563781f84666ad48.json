{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documents/Learn.co/online-store/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport { getUserDetails, updateUser } from \"../redux/actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let params = useParams();\n  let navigate = useNavigate();\n  const userId = params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    user,\n    loading,\n    error\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/users\");\n    } else {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, successUpdate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"isadmin\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"mt-3\",\n          type: \"radio\",\n          label: \"is Admin\",\n          id: \"isadmin\",\n          name: \"isAdmin\",\n          checked: isAdmin,\n          onChange: e => setIsAdmin(!isAdmin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-3\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: loadingUpdate ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 30\n        }, this) : `Update`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserEditScreen, \"dc+O3v93MWpqhYGzJaT+ZuwfYm8=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/home/leo/Documents/Learn.co/online-store/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","useNavigate","Form","Button","FormContainer","Message","Loading","getUserDetails","updateUser","UserEditScreen","dispatch","params","navigate","userId","id","name","setName","email","setEmail","isAdmin","setIsAdmin","userDetails","state","user","loading","error","userUpdate","loadingUpdate","success","successUpdate","errorUpdate","_id","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport { getUserDetails, updateUser } from \"../redux/actions/userActions\";\n\nconst UserEditScreen = () => {\n  const dispatch = useDispatch();\n  let params = useParams();\n  let navigate = useNavigate();\n  const userId = params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user, loading, error } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/users\");\n    } else {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <FormContainer>\n      <h2>Edit User</h2>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Form onSubmit={handleSubmit}>\n          {error && <Message variant=\"danger\">{error}</Message>}\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          <Form.Group controlId=\"name\" className=\"mt-3\">\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Full Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\" className=\"mt-3\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"isadmin\">\n            <Form.Check\n              className=\"mt-3\"\n              type=\"radio\"\n              label=\"is Admin\"\n              id=\"isadmin\"\n              name=\"isAdmin\"\n              checked={isAdmin}\n              onChange={(e) => setIsAdmin(!isAdmin)}\n            ></Form.Check>\n          </Form.Group>\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n            {loadingUpdate ? <Loading /> : `Update`}\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}